/*
 * Copyright 2014 VRT Systems
 * Copyright 2012 Freescale Semiconductor, Inc.
 *
 * The code contained herein is licensed under the GNU General Public
 * License. You may obtain a copy of the GNU General Public License
 * Version 2 or later at the following locations:
 *
 * http://www.opensource.org/licenses/gpl-license.html
 * http://www.gnu.org/copyleft/gpl.html
 */

/dts-v1/;
#include "imx28.dtsi"

/ {
	model = "Technologic Systems TS-7670 rev B";
	compatible = "technologic,ts-7670b", "fsl,imx28";

	memory {
		reg = <0x40000000 0x10000000>;
	};

	apb@80000000 {
		apbh@80000000 {
			gpmi-nand@8000c000 {
				pinctrl-names = "default";
				pinctrl-0 = <&gpmi_pins_ts7400
					&gpmi_status_cfg>;
				status = "okay";
			};

			ssp0: ssp@80010000 {
				compatible = "fsl,imx28-mmc";
				pinctrl-names = "default";
				pinctrl-0 = <&mmc0_4bit_pins_a
					&mmc0_sck_cfg>;
				bus-width = <4>;
				vmmc-supply = <&reg_vddio_sd0>;
				status = "okay";
				broken-cd;
				non-removable;
			};

			ssp2: ssp@80014000 {
				compatible = "fsl,imx28-mmc";
				pinctrl-names = "default";
				pinctrl-0 = <&mmc2_pins_ts7400
					&mmc2_sck_cfg>;
				bus-width = <4>;
				vmmc-supply = <&reg_vddio_sd0>;
				status = "okay";
				broken-cd;
				non-removable;
			};

			pinctrl@80018000 {
				pinctrl-names = "default";
				pinctrl-0 = <&hog_pins_a>;

				mmc2_pins_ts7400: mmc2-4bit@0 {
					reg = <0>;
					fsl,pinmux-ids = <
						MX28_PAD_SSP0_DATA4__SSP2_D0
						MX28_PAD_SSP2_SS1__SSP2_D1
						MX28_PAD_SSP2_SS2__SSP2_D2
						MX28_PAD_SSP0_DATA5__SSP2_D3
						MX28_PAD_SSP0_DATA6__SSP2_CMD
						MX28_PAD_SSP0_DATA7__SSP2_SCK
					>;
					/*
					 * MX28_PAD_SSP0_DATA7__SSP2_SCK is
					 * handled by mmc2_sck_cfg
					 */
					fsl,drive-strength = <MXS_DRIVE_8mA>;
					fsl,voltage = <MXS_VOLTAGE_HIGH>;
					fsl,pull-up = <MXS_PULL_ENABLE>;
				};

				hog_pins_a: hog@0 {
					reg = <0>;
					fsl,pinmux-ids = <
						MX28_PAD_LCD_RESET__GPIO_3_30
						MX28_PAD_LCD_CS__GPIO_1_27
						MX28_PAD_GPMI_RDY1__GPIO_0_21
					>;
					fsl,drive-strength = <MXS_DRIVE_4mA>;
					fsl,voltage = <MXS_VOLTAGE_HIGH>;
					fsl,pull-up = <MXS_PULL_DISABLE>;
				};

				red_led_pin_gpio0_17: red_led_gpio0_17@0 {
					reg = <0>;
					fsl,pinmux-ids = <
						MX28_PAD_GPMI_CE1N__GPIO_0_17
					>;
					fsl,drive-strength = <MXS_DRIVE_4mA>;
					fsl,voltage = <MXS_VOLTAGE_HIGH>;
					fsl,pull-up = <MXS_PULL_DISABLE>;
				};

				blue_led_pin_gpio1_24: blue_led_gpio1_24@0 {
					reg = <0>;
					fsl,pinmux-ids = <
						MX28_PAD_LCD_RD_E__GPIO_1_24
					>;
					fsl,drive-strength = <MXS_DRIVE_4mA>;
					fsl,voltage = <MXS_VOLTAGE_HIGH>;
					fsl,pull-up = <MXS_PULL_DISABLE>;
				};

				green_led_pin_gpio0_28: green_led_gpio0_28@0 {
					reg = <0>;
					fsl,pinmux-ids = <
						MX28_PAD_GPMI_RESETN__GPIO_0_28
					>;
					fsl,drive-strength = <MXS_DRIVE_4mA>;
					fsl,voltage = <MXS_VOLTAGE_HIGH>;
					fsl,pull-up = <MXS_PULL_DISABLE>;
				};

				yellow_led_pin_gpio1_26: yellow_led_gpio1_26@0 {
					reg = <0>;
					fsl,pinmux-ids = <
						MX28_PAD_LCD_RS__GPIO_1_26
					>;
					fsl,drive-strength = <MXS_DRIVE_4mA>;
					fsl,voltage = <MXS_VOLTAGE_HIGH>;
					fsl,pull-up = <MXS_PULL_DISABLE>;
				};

				rs232_en_led_pin_gpio1_26: rs232_en_led_gpio1_25@0 {
					reg = <0>;
					fsl,pinmux-ids = <
						MX28_PAD_LCD_WR_RWN__GPIO_1_25
					>;
					fsl,drive-strength = <MXS_DRIVE_4mA>;
					fsl,voltage = <MXS_VOLTAGE_LOW>;
					fsl,pull-up = <MXS_PULL_DISABLE>;
				};

				gpmi_pins_ts7400: gpmi-nand@0 {
					reg = <0>;
					fsl,pinmux-ids = <
						MX28_PAD_GPMI_D00__GPMI_D0
						MX28_PAD_GPMI_D01__GPMI_D1
						MX28_PAD_GPMI_D02__GPMI_D2
						MX28_PAD_GPMI_D03__GPMI_D3
						MX28_PAD_GPMI_D04__GPMI_D4
						MX28_PAD_GPMI_D05__GPMI_D5
						MX28_PAD_GPMI_D06__GPMI_D6
						MX28_PAD_GPMI_D07__GPMI_D7
						MX28_PAD_GPMI_CE0N__GPMI_CE0N
						MX28_PAD_GPMI_RDY0__GPMI_READY0
						MX28_PAD_GPMI_RDN__GPMI_RDN
						MX28_PAD_GPMI_WRN__GPMI_WRN
						MX28_PAD_GPMI_ALE__GPMI_ALE
						MX28_PAD_GPMI_CLE__GPMI_CLE
					>;
					fsl,drive-strength = <MXS_DRIVE_4mA>;
					fsl,voltage = <MXS_VOLTAGE_HIGH>;
					fsl,pull-up = <MXS_PULL_DISABLE>;
				};
				auart4_pins: auart4@0 {
					reg = <0>;
					fsl,pinmux-ids = <
						MX28_PAD_SAIF0_SDATA0__AUART4_TX
						MX28_PAD_SAIF0_BITCLK__AUART4_RX
					>;
					fsl,drive-strength = <MXS_DRIVE_4mA>;
					fsl,voltage = <MXS_VOLTAGE_HIGH>;
					fsl,pull-up = <MXS_PULL_DISABLE>;
				};

#if 0
				spi_pins_ts7400: spi0-ts7400@0 {
					reg = <0>;
					/*
					 * SAIF0_MCLK = MOSI
					 * SAIF0_LRCLK = MISO
					 * SAIF1_SDATA0 = CLK
					 * PWM4 = CS
					 */
					fsl,pinmux-ids = <
						MX28_PAD_SAIF0_MCLK__GPIO_3_20
						MX28_PAD_SAIF0_LRCLK__GPIO_3_21
						MX28_PAD_SAIF1_SDATA0__GPIO_3_26
						MX28_PAD_PWM4__GPIO_3_29
					>;
					fsl,drive-strength = <MXS_DRIVE_4mA>;
					fsl,voltage = <MXS_VOLTAGE_HIGH>;
					fsl,pull-up = <MXS_PULL_DISABLE>;
				};
#endif
			};

			can0: can@80032000 {
				pinctrl-names = "default";
				pinctrl-0 = <&can0_pins_a>;
				xceiver-supply = <&reg_can_3v3>;
				status = "okay";
			};

			can1: can@80034000 {
				pinctrl-names = "default";
				pinctrl-0 = <&can1_pins_a>;
				xceiver-supply = <&reg_can_3v3>;
				status = "okay";
			};
		};

		apbx@80040000 {
			i2c0: i2c@80058000 {
				pinctrl-names = "default";
				pinctrl-0 = <&i2c0_pins_a>;
				clock-frequency = <400000>;
				status = "okay";

				isl12022@0x6f {
					compatible = "isl,isl12022";
					reg = <0x6f>;
				};

				silabs: silabs@78 {
					compatible = "ts-wdt";
					reg = <0x78>;
				};
			};

			pwm: pwm@80064000 {
				pinctrl-names = "default";
				pinctrl-0 = <&pwm2_pins_a>;
				status = "okay";
			};

			duart: serial@80074000 {
				pinctrl-names = "default";
				pinctrl-0 = <&duart_pins_a>;
				status = "okay";
			};

			auart0: serial@8006a000 {
				pinctrl-names = "default";
				pinctrl-0 = <&auart0_pins_a>;
				fsl,uart-has-rtscts;
				status = "okay";
			};

			auart1: serial@8006c000 {
				pinctrl-names = "default";
				pinctrl-0 = <&auart1_2pins_a>;
				status = "okay";
			};

			auart2: serial@8006e000 {
				pinctrl-names = "default";
				pinctrl-0 = <&auart2_2pins_a>;
				pwms = <&pwm 2 9600 0>;
				status = "okay";
			};

			auart3: serial@80070000 {
				pinctrl-names = "default";
				pinctrl-0 = <&auart3_2pins_a>;
				status = "okay";
			};

			auart4: serial@80072000 {
				pinctrl-names = "default";
				pinctrl-0 = <&auart4_pins>;
				status = "okay";
			};

			usbphy0: usbphy@8007c000 {
				status = "okay";
			};

			usbphy1: usbphy@8007e000 {
				status = "okay";
			};
		};
	};

	ahb@80080000 {
		usb0: usb@80080000 {
			vbus-supply = <&reg_usb_vbus>;
			status = "okay";
		};

		usb1: usb@80090000 {
			vbus-supply = <&reg_usb_vbus>;
			status = "okay";
		};

		mac0: ethernet@800f0000 {
			phy-mode = "rmii";
			pinctrl-names = "default";
			pinctrl-0 = <&mac0_pins_a>;
			phy-supply = <&reg_fec_3v3>;
			phy-reset-gpios = <&gpio4 13 0>;
			phy-reset-duration = <100>;
			status = "okay";
		};
	};

	regulators {
		compatible = "simple-bus";
		#address-cells = <1>;
		#size-cells = <0>;

		reg_3p3v: regulator@0 {
			compatible = "regulator-fixed";
			reg = <0>;
			regulator-name = "3P3V";
			regulator-min-microvolt = <3300000>;
			regulator-max-microvolt = <3300000>;
			regulator-always-on;
		};

		reg_vddio_sd0: regulator@1 {
			compatible = "regulator-fixed";
			reg = <1>;
			regulator-name = "vddio-sd0";
			regulator-min-microvolt = <3300000>;
			regulator-max-microvolt = <3300000>;
			gpio = <&gpio3 28 0>;
			regulator-always-on;
		};

		reg_fec_3v3: regulator@2 {
			compatible = "regulator-fixed";
			reg = <2>;
			regulator-name = "fec-3v3";
			regulator-min-microvolt = <3300000>;
			regulator-max-microvolt = <3300000>;
			gpio = <&gpio0 21 0>;
			regulator-always-on;
		};

		reg_usb_vbus: regulator@3 {
			compatible = "regulator-fixed";
			reg = <3>;
			regulator-name = "usb_vbus";
			regulator-min-microvolt = <5000000>;
			regulator-max-microvolt = <5000000>;
			gpio = <&gpio1 27 0>;
			enable-active-high;
			regulator-always-on;
		};

		reg_can_3v3: regulator@7 {
			compatible = "regulator-fixed";
			reg = <7>;
			regulator-name = "can-3v3";
			regulator-min-microvolt = <3300000>;
			regulator-max-microvolt = <3300000>;
			gpio = <&gpio3 30 0>;
		};
	};

	leds {
		compatible = "gpio-leds";
		pinctrl-names = "default";
		pinctrl-0 = <&red_led_pin_gpio0_17
				&blue_led_pin_gpio1_24
				&green_led_pin_gpio0_28
				&yellow_led_pin_gpio1_26
				&rs232_en_led_pin_gpio1_26>;

		status2 {
			label = "red:status2";
			/* GPMI_CE1N */
			gpios = <&gpio0 17 1>;
			linux,default-trigger = "mmc1";
		};

		status1 {
			label = "blue:status1";
			/* LCD_RD_E */
			gpios = <&gpio1 24 1>;
			linux,default-trigger = "none";
		};

		power {
			label = "green:power";
			/* GPMI_RESETN */
			gpios = <&gpio0 28 1>;
			linux,default-trigger = "heartbeat";
		};

		activity {
			label = "yellow:activity";
			/* LCD_RS */
			gpios = <&gpio1 26 1>;
			linux,default-trigger = "mmc0";
		};

		/* Kludge, to permit turning RS-232 transceivers on/off */
		rs232_en {
			label = "rs232_en";
			/* LCD_RWM */
			gpios = <&gpio1 25 0>;
			linux,default-trigger = "default-on";
		};
	};
#if 0
	spi0 {
		compatible = "spi-gpio";
		pinctrl-names = "default";
		pinctrl-0 = <&spi_pins_ts7400>;
		status = "okay";
		bus-num = <0>;
		gpio-sck = <&gpio3 26 1>; /* SAIF1_SDATA0 */
		gpio-mosi = <&gpio3 21 0>; /* SAIF0_LRCLK */
		gpio-miso = <&gpio3 20 0>; /* SAIF0_MCLK */
		cs-gpios = <&gpio3 29 0>; /* PWM4 */
		num-chipselects = <1>;
		#address-cells = <1>;
		#size-cells = <0>;

		/*
		 * TODO: TS-7400/TS-7670 companion MCU goes here.
		 * For now, just expose it to userspace for tshwctl and friends.
		 */
		spidev@0x00 {
			compatible = "spidev";
			spi-max-frequency = <30000000>;
			reg = <0>;
		};
	};
#endif
};
